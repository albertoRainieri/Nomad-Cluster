# vagrant version 2.4.1
# 

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

box_iso = "gyptazy/ubuntu22.04-arm64"
box_version = "1.0.1"

server_ip_1 = "192.168.217.103"
server_hostname_1 = "consul"

server_ip_2 = "192.168.217.100"
server_hostname_2 = "nmaster"

server_ip_3 = "192.168.217.10"
server_hostname_3 = "nclient"
number_of_nomad_clients = 1


Vagrant.configure(2) do |config|

  # Consul Server
  config.ssh.keep_alive = true
  
  config.vm.define server_hostname_1 do |node|

    node.vm.box               = box_iso
    node.vm.box_version       = box_version
    node.vm.box_check_update  = false
    node.vm.hostname          = server_hostname_1 + ".example.com"
    node.vm.network "private_network", ip: server_ip_1
      
    node.vm.provider "vmware_fusion" do |v|
      v.gui     = false
      v.memory  = 2048
      v.cpus    =  2
    end

    node.vm.provision "shell", path: "../config/bootstrap_shell/consul_bootstrap.sh"

    node.vm.provision "ansible" do |ansible|
      ansible.playbook = "../ansible/consul/consul_master.yaml"
      ansible.extra_vars = {
        consul_bind_address: server_ip_1
      }
    end

    node.vm.provision "ansible" do |ansible|
      ansible.playbook = "../ansible/haproxy/haproxy.yaml"
    end
    
  end

  # Nomad Master Server
  config.vm.define server_hostname_2 do |node|
  
    node.vm.box               = box_iso
    node.vm.box_version       = box_version
    node.vm.box_check_update  = false
    node.vm.hostname          = server_hostname_2 + ".example.com"
    node.vm.network "private_network", ip: server_ip_2

    node.vm.provider "vmware_fusion" do |v|
      v.gui     = false
      v.memory  = 2048
      v.cpus    =  2
    end
    
    node.vm.provision "shell", path: "../config/bootstrap_shell/nomad_bootstrap.sh", args: server_ip_2
    node.vm.provision "shell", path: "../config/bootstrap_shell/nomad_master_config.sh"

    node.vm.provision "ansible" do |ansible|
      ansible.playbook = "../ansible/consul/consul_client.yaml"
      ansible.groups = {"consul_client" => ["nmaster"]}
      ansible.extra_vars = {
        consul_bind_address: server_ip_1
      }
    end

  end


  (1..number_of_nomad_clients).each do |i|
    
    config.vm.define server_hostname_3 + "#{i}" do |node|

    node.vm.box               = box_iso
    node.vm.box_version       = box_version
      node.vm.box_check_update  = false
      node.vm.hostname          = server_hostname_3 + "#{i}.example.com"
      node.vm.network "private_network", ip: server_ip_3 + "#{i}"

      node.vm.provider "vmware_fusion" do |v|
        v.gui     = false
        v.memory  = 2048
        v.cpus    = 2
      end

      ip_address = server_ip_3 + "#{i}"

      node.vm.provision "shell" do |s|
        s.path = "../config/bootstrap_shell/nomad_bootstrap.sh"
        s.args = [ server_ip_3 + "#{i}"]
      end
      node.vm.provision "shell", path: "../config/bootstrap_shell/nomad_client_config.sh"

      node.vm.provision "ansible" do |ansible|
        ansible.playbook = "../ansible/consul/consul_client.yaml"
        ansible.groups = {"consul_client" => [server_hostname_3 + "#{i}"]}
        ansible.extra_vars = {
          consul_bind_address: server_ip_1
        }
      end
    end

  end

end